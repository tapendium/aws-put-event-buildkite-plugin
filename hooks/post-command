#!/bin/bash

set -eo pipefail

CWD="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# shellcheck source=lib/shared.sh
. "$CWD/../lib/shared.sh"

entries=("--entries")
args=()

[ -z "$ENTRY_DETAIL" ] && {
  echo "ENTRY_DETAIL environment not defined. Exiting" 1>&2
  exit 1
}

[ -z "$BUILDKITE_PLUGIN_AWS_PUT_EVENT_ENTRIES_SOURCE" ] && {
  echo "entries > source not defined. Exiting" 1>&2
  exit 1
}

[ -z "$BUILDKITE_PLUGIN_AWS_PUT_EVENT_ENTRIES_DETAIL_TYPE" ] && {
  echo "entries > detail-type not defined. Exiting" 1>&2
  exit 1
}

[ -z "$BUILDKITE_PLUGIN_AWS_PUT_EVENT_ENTRIES_EVENT_BUS_NAME" ] && {
  echo "entries > event-bus-name not defined. Exiting" 1>&2
  exit 1
}

if [[ -n "${ENTRY_DETAIL:-}" ]] ; then
    entries+=("Detail=${ENTRY_DETAIL}")
fi

echo "--- Sending event"

while IFS='=' read -r name _; do
	if [[ $name =~ ^(BUILDKITE_PLUGIN_AWS_PUT_EVENT_ENTRIES_) ]]; then
		if [[ $name =~ (SOURCE)$ ]]; then
      entries+=("Source=${!name}")
		fi
		if [[ $name =~ (RESOURCES)$ ]]; then
      entries+=("Resources=${!name}")
		fi
		if [[ $name =~ (DETAIL_TYPE)$ ]]; then
      entries+=("DetailType=${!name}")
		fi
    if [[ $name =~ (EVENT_BUS_NAME)$ ]]; then
      entries+=("EventBusName=${!name}")
    fi
    if [[ $name =~ (TRACE_HEADER)$ ]]; then
      entries+=("TraceHeader=${!name}")
    fi
	fi

	if [[ $name =~ ^(BUILDKITE_PLUGIN_AWS_PUT_ENDPOINT_URL) ]]; then
    args+=("--endpoint-url" "${!name}")
  fi

	if [[ $name =~ ^(BUILDKITE_PLUGIN_AWS_PUT_EVENT_ENDPOINT_ID) ]]; then
    args+=("--endpoint-id" "${!name}")
  fi

	if [[ $name =~ ^(BUILDKITE_PLUGIN_AWS_PUT_EVENT_CLI_INPUT_JSON) ]]; then
    args+=("--cli-input-json" "${!name}")
  fi

  if [[ $name =~ ^(BUILDKITE_PLUGIN_AWS_PUT_EVENT_GENERATE_CLI_SKELETON) ]]; then
    args+=("--generate-cli-skeleton" "${!name}")
  fi

  if [[ $name =~ ^(BUILDKITE_PLUGIN_AWS_PUT_EVENT_REGION) ]]; then
    args+=("--region" "${!name}")
  fi

  if [[ $name =~ ^(BUILDKITE_PLUGIN_AWS_PUT_EVENT_DEBUG) ]]; then
    args+=("--debug")
  fi
done < <(env | sort)

# debugger
# [[ "${entries[@]}" != "Source" ]] && {
#   printf "%q " "${entries[@]}"
#   echo
#   printf "%q " "${args[@]}"
#   echo "\ndebug in testing"
#   exit 1;
# }

echo "--- :aws: Running command in image"
echo -ne '\033[90m$\033[0m aws events put-events ' >&2

printf "%q " "${entries[@]}"
printf "%q " "${args[@]}"
echo

put_events "${entries[@]}" "${args[@]}"

